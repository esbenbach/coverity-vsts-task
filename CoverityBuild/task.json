{
  "id": "8487f430-a2a7-11e7-bfce-1bcbeba500de",
  "name": "CoverityBuild",
  "friendlyName": "Coverity Build and Analysis",
  "description": "Tasks for building and analysing C# code using Coverity Static Analysis",
  "author": "Esben Bach",
  "helpMarkDown": "For source and readme go to the Github repo at https://github.com/esbenbach/coverity-vsts-task",
  "category": "Build",
  "visibility": [
    "Build"
  ],
  "runsOn": [
    "Agent"
  ],
  "groups": [
    {
      "name": "build",
      "displayName": "Build Configuration",
      "isExpanded": true
    },
    {
      "name": "coverityServer",
      "displayName": "Coverity Server",
      "isExpanded": true
    },
    {
      "name": "coverityClient",
      "displayName": "Coverity Client",
      "isExpanded": true
    },
    {
      "name": "analysisSettings",
      "displayName": "Coverity Analysis Settings",
      "isExpanded": false
    },
    {
      "name": "scmSettings",
      "displayName": "Source Control Settings",
      "isExpanded": false
    },
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "demands": [],
  "version": {
    "Major": "1",
    "Minor": "3",
    "Patch": "15"
  },
  "minimumAgentVersion": "1.95.0",
  "instanceNameFormat": "Coverity Build and Analysis",
  "inputs": [
    {
      "name": "solution",
      "type": "filePath",
      "label": "Solution",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Relative path from repo root of the solution(s) or MSBuild project to run.",
      "groupName": "build"
    },
    {
      "name": "configuration",
      "type": "string",
      "label": "Configuration",
      "defaultValue": "$(BuildConfiguration)",
      "required": false,
      "helpMarkDown": "Build configuration passed to msbuild",
      "groupName": "build"
    },
    {
      "name": "platform",
      "type": "string",
      "label": "Platform",
      "defaultValue": "$(BuildPlatform)",
      "required": false,
      "helpMarkDown": "Build platform passed to msbuild",
      "groupName": "build"
    },
    {
      "name": "sourceSearchPath",
      "type": "string",
      "label": "Source Search Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Optional path for searching for source files such as *.js files",
      "groupName": "build"
    },
    {
      "name": "stream",
      "label": "Stream",
      "type": "string",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The name of the stream on the Coverity server where result will be published",
      "groupName": "coverityServer"
    },
    {
      "name": "hostname",
      "label": "Hostname",
      "type": "string",
      "defaultValue": "coverity.somehost.somedomain",
      "required": true,
      "helpMarkDown": "The DNS name or IP of the host containing the Coverity service",
      "groupName": "coverityServer"
    },
    {
      "name": "portNumber",
      "label": " Portnumber",
      "type": "string",
      "defaultValue": "8443",
      "required": false,
      "helpMarkDown": "The DNS name or IP of the host containing the Coverity service",
      "groupName": "coverityServer"
    },
    {
      "name": "cwd",
      "type": "filePath",
      "label": "Working Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Current working directory where cov-* utils are executed from.",
      "groupName": "coverityClient"
    },
    {
      "name": "coverityBinPath",
      "label": "Coverity Binaries Path",
      "type": "filePath",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path to the coverity static analysis bin folder where cov-build etc resides. If left blank it is assumed the utilities are available in the path",
      "groupName": "coverityClient"
    },
    {
      "name": "authKeyFile",
      "type": "filePath",
      "label": "Coverity Authentication Key File",
      "required": false,
      "helpMarkDown": "Path to the key file that allows the analysis to commit defects to the coverity server",
      "groupName": "coverityClient"
    },
    {
      "name": "allCheckers",
      "type": "boolean",
      "label": "Enable All Checkers",
      "defaultValue": true,
      "required": true,
      "helpMarkDown": "If set the cov-analysis command will be executed using with the --all argument, refer to the docs for details",
      "groupName": "analysisSettings"
    },
    {
      "name": "webSecurityCheckers",
      "type": "boolean",
      "label": "Enable Web Security Checkers",
      "defaultValue": true,
      "required": true,
      "helpMarkDown": "If set the cov-analysis command will be executed using with the --webapp-security argument, refer to the docs for details",
      "groupName": "analysisSettings"
    },
    {
      "name": "webSecurityPreviewCheckers",
      "type": "boolean",
      "label": "Enable Web Security Preview Checkers",
      "defaultValue": false,
      "required": true,
      "helpMarkDown": "If set the cov-analysis command will be executed using with the -webapp-security-preview argument, refer to the docs for details",
      "groupName": "analysisSettings"
    },
    {
      "name": "customCheckers",
      "type": "multiline",
      "label": "Enable specific checkers",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Enter one or more checkers (delimited using newline) to be enabled using the --enable CHECKERNAME argument to cov-analysis, refer to the docs for details of available checkers",
      "groupName": "analysisSettings"
    },
    {
      "name": "disabledCheckers",
      "type": "multiline",
      "label": "Disable specific checkers",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Enter one or more checkers (delimited using newline) to be disabled using the --disable CHECKERNAME argument to cov-analysis, useful if you want to use all except a few checkers. Refer to the docs for details of available checkers",
      "groupName": "analysisSettings"
    },
    {
      "name": "enableScmImport",
      "type": "boolean",
      "label": "Enable SCM Annotation import for ownership assignment",
      "defaultvalue": true,
      "required": false,
      "helpMarkDown": "If enabled an attempt wll be made to import source control annotation when assigning defect owner using cov-import-scm",
      "groupName": "scmSettings"
    },
    {
      "name": "scmType",
      "type": "string",
      "label": "Source Control Management System",
      "defaultValue": "git",
      "required": false,
      "helpMarkDown": "Source Control Management System that cov-import-scm should use, typically git, svn, tfs etc. Refer to the coverity manual for possible options.",
      "groupName": "scmSettings"
    },
    {
      "name": "idir",
      "type": "filePath",
      "label": "Intermediate Directory",
      "defaultValue": "cov-intermediate",
      "required": false,
      "helpMarkDown": "Directory to look for and place intermediate files, default to working directory/cov-intermediate",
      "groupName": "advanced"
    },
    {
      "name": "covbuildargs",
      "type": "string",
      "label": "Arguments for cov-build",
      "defaultValue": "",
      "required": false,
      "helpMarkDOwn": "Additional arguments to pass to the cov-build command",
      "groupName": "advanced"
    },
    {
      "name": "covanalyzeargs",
      "type": "string",
      "label": "Arguments for cov-analyze",
      "defaultValue": "",
      "required": false,
      "helpMarkDOwn": "Additional arguments to pass to the cov-analyze command",
      "groupName": "advanced"
    },
    {
      "name": "covcommitargs",
      "type": "string",
      "label": "Arguments for cov-commit-defects",
      "defaultValue": "",
      "required": false,
      "helpMarkDOwn": "Additional arguments to pass to the cov-commit-defects command",
      "groupName": "advanced"
    },
    {
      "name": "covscmargs",
      "type": "string",
      "label": "Arguments for cov-import-scm",
      "defaultValue": "",
      "required": false,
      "helpMarkDOwn": "Additional arguments to pass to the cov-import-scm command, the default arguments contains the scm type and the intermediate dir.",
      "groupName": "advanced"
    }
  ],
  "execution": {
    "PowerShell3": {
      "target": "CoverityBuild.ps1"
    }
  }
}